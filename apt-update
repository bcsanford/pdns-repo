#!/usr/bin/env bash

#Basic Settings
	# If the color table file exists,
	if [[ -f "${coltable}" ]]; then
		# source it
		source ${coltable}
	# Otherwise,
	else
		# Set these values so the installer can still run in color
		COL_NC='\e[0m' # No Color
		COL_LIGHT_BLUE='\e[34;40m'
		COL_LIGHT_GREEN='\e[1;32m'
		COL_LIGHT_RED='\e[1;31m'
		TICK="[${COL_LIGHT_GREEN}✓${COL_NC}]"
		CROSS="[${COL_LIGHT_RED}✗${COL_NC}]"
		INFO="[i]"
		# shellcheck disable=SC2034
		DONE="${COL_LIGHT_GREEN} done!${COL_NC}"
		OVER="\\r\\033[K"
	fi
##

accii_logo() {
	echo -e ""
}

is_command() {
    # Checks for existence of string passed in as only function argument.
    # Exit value of 0 when exists, 1 if not exists. Value is the result
    # of the `command` shell built-in call.
    local check_command="$1"
    command -v "${check_command}" >/dev/null 2>&1
}

add_server_repo() {
	if grep -Fq 'deb http://repo.powerdns.com/raspbian stretch-auth-master main' '/etc/apt/sources.list.d/pdns.list'; then
		printf "%b  %b Repository Added\\n" "${OVER}"  "${TICK}"
	else
	printf "%b  %b Adding Repository\\n" "${OVER}"  "${INFO}"
	echo "deb http://repo.powerdns.com/raspbian stretch-auth-master main" >> /etc/apt/sources.list.d/pdns.list
		if grep -Fq 'deb http://repo.powerdns.com/raspbian stretch-auth-master main' '/etc/apt/sources.list.d/pdns.list'; then
		printf "%b  %b Repository Added\\n" "${OVER}"  "${TICK}"
		apt-get update
		printf "%b  %b Package Library Updated\\n" "${OVER}"  "${TICK}"
		else
		add_repo
		fi
	fi
}

add_recursor_repo() {
	if grep -Fq 'deb http://repo.powerdns.com/raspbian stretch-rec-master main' '/etc/apt/sources.list.d/pdns.list'; then
		printf "%b  %b Repository Added\\n" "${OVER}"  "${TICK}"
	else
	printf "%b  %b Adding Repository\\n" "${OVER}"  "${INFO}"
	echo "deb http://repo.powerdns.com/raspbian stretch-rec-master main" >> /etc/apt/sources.list.d/pdns.list
		if grep -Fq 'deb http://repo.powerdns.com/raspbian stretch-rec-master main' '/etc/apt/sources.list.d/pdns.list'; then
		printf "%b  %b Repository Added\\n" "${OVER}"  "${TICK}"
		apt-get update
		printf "%b  %b Package Library Updated\\n" "${OVER}"  "${TICK}"
		else
		add_repo
		fi
	fi
}

add_dnsdist_repo() {
	if grep -Fq 'deb http://repo.powerdns.com/raspbian stretch-dnsdist-master main' '/etc/apt/sources.list.d/pdns.list'; then
		printf "%b  %b Repository Added\\n" "${OVER}"  "${TICK}"
	else
	printf "%b  %b Adding Repository\\n" "${OVER}"  "${INFO}"
	echo "deb http://repo.powerdns.com/raspbian stretch-dnsdist-master main" >> /etc/apt/sources.list.d/pdns.list
		if grep -Fq 'deb http://repo.powerdns.com/raspbian stretch-dnsdist-master main' '/etc/apt/sources.list.d/pdns.list'; then
		printf "%b  %b Repository Added\\n" "${OVER}"  "${TICK}"
		apt-get update
		printf "%b  %b Package Library Updated\\n" "${OVER}"  "${TICK}"
		else
		add_repo
		fi
	fi
}

pin_pdns_pkg() {
	echo <<- EOF > /etc/apt/preferences.d/pdns
	Package: pdns-*
	Pin: origin repo.powerdns.com
	Pin-Priority: 600
	EOF
}

pin_dnsdist_pkg() {
	echo <<- EOF > /etc/apt/preferences.d/dnsdist
	Package: dnsdist*
	Pin: origin repo.powerdns.com
	Pin-Priority: 600
	EOF
}

add_pkgkey_reload() {
	curl https://repo.powerdns.com/FD380FBB-pub.asc | apt-key add - &&
	curl https://repo.powerdns.com/CBC8B383-pub.asc | apt-key add - &&
	apt-get update
}

rw_check() {
	epoch=$(date +%s)
	touch /etc/rwcheck-$epoch
	if [[ -f /etc/rwcheck-$epoch ]]; then
	printf "%b  %b Read/Write Access Confirmed\\n" "${OVER}"  "${TICK}"
	rm /etc/rwcheck-$epoch
	else            
	printf "%b  %b Read Only Access\\n" "${OVER}" "${CROSS}"
	fi 
}

root_check() {
    # Must be root to install
	local str="Root user check"
	printf "\\n"
	if [[ "${EUID}" -eq 0 ]]; then
	printf "  %b %s\\n" "${TICK}" "${str}"
	else
	printf "  %b %s\\n" "${CROSS}" "${str}"
	printf "  %b %bScript called with non-root privileges%b\\n" "${INFO}" "${COL_LIGHT_RED}" "${COL_NC}"
	printf "  The unifi-pimd requires elevated privileges to install and run\\n"
	printf "  %b Sudo utility check" "${INFO}"
	if is_command sudo ; then
	printf "%b  %b Sudo utility check\\n" "${OVER}"  "${TICK}"
	# Download the install script and run it with admin rights
	exec curl -sSL https://raw.githubusercontent.com/bcsanford/pdns-repo/master/apt-update | sudo bash "$@"
	exit $?
	else
	printf "%b  %b Sudo utility check\\n" "${OVER}" "${CROSS}"
	printf "  %b Sudo is needed to install and configure pdns-repo\\n\\n" "${INFO}"
	printf "  %b %bPlease re-run this installer as root${COL_NC}\\n" "${INFO}" "${COL_LIGHT_RED}"
	exit 1
	fi
	fi
}

main() {
accii_logo
printf "%b  %b unifi-pimd Version: 0.0.2\\n" "${OVER}"  "${INFO}"
rw_check
root_check

add_server_repo
add_recursor_repo
add_dnsdist_repo

pin_pdns_pkg
pin_dnsdist_pkg

add_pkgkey_reload

}

main "$@"